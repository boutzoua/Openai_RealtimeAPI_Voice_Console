{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimliClient = void 0;\nconst events_1 = require(\"events\");\nconst AudioWorklet_1 = require(\"./AudioWorklet\");\nclass SimliClient extends events_1.EventEmitter {\n  constructor() {\n    super();\n    this.pc = null;\n    this.dc = null;\n    this.dcInterval = null;\n    this.candidateCount = 0;\n    this.prevCandidateCount = -1;\n    this.apiKey = \"\";\n    this.faceID = \"\";\n    this.handleSilence = true;\n    this.videoRef = null;\n    this.audioRef = null;\n    this.errorReason = null;\n    this.sessionInitialized = false;\n    this.inputStreamTrack = null;\n    this.sourceNode = null;\n    this.audioWorklet = null;\n    this.audioBuffer = null;\n    this.handleBeforeUnload = event => {\n      this.close();\n      event.preventDefault();\n      event.returnValue = \"\";\n    };\n    this.handlePageHide = event => {\n      if (event.persisted) {\n        // The page is being cached for bfcache\n        this.close();\n      } else {\n        // The page is being unloaded\n        this.close();\n      }\n    };\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"beforeunload\", this.handleBeforeUnload);\n      window.addEventListener(\"pagehide\", this.handlePageHide);\n    }\n  }\n  Initialize(config) {\n    this.apiKey = config.apiKey;\n    this.faceID = config.faceID;\n    this.handleSilence = config.handleSilence;\n    if (typeof window !== \"undefined\") {\n      this.videoRef = config.videoRef;\n      this.audioRef = config.audioRef;\n    } else {\n      console.warn(\"Running in Node.js environment. Some features may not be available.\");\n    }\n  }\n  createPeerConnection() {\n    const config = {\n      iceServers: [{\n        urls: [\"stun:stun.l.google.com:19302\"]\n      }]\n    };\n    console.log(\"Server running: \", config.iceServers);\n    this.pc = new window.RTCPeerConnection(config);\n    if (this.pc) {\n      this.setupPeerConnectionListeners();\n    }\n  }\n  setupPeerConnectionListeners() {\n    if (!this.pc) return;\n    this.pc.addEventListener(\"icegatheringstatechange\", () => {\n      var _a;\n      console.log(\"ICE gathering state changed: \", (_a = this.pc) === null || _a === void 0 ? void 0 : _a.iceGatheringState);\n    });\n    this.pc.addEventListener(\"iceconnectionstatechange\", () => {\n      var _a;\n      console.log(\"ICE connection state changed: \", (_a = this.pc) === null || _a === void 0 ? void 0 : _a.iceConnectionState);\n    });\n    this.pc.addEventListener(\"signalingstatechange\", () => {\n      var _a;\n      console.log(\"Signaling state changed: \", (_a = this.pc) === null || _a === void 0 ? void 0 : _a.signalingState);\n    });\n    this.pc.addEventListener(\"track\", evt => {\n      var _a, _b;\n      console.log(\"Track event: \", evt.track.kind);\n      if (evt.track.kind === \"video\" && ((_a = this.videoRef) === null || _a === void 0 ? void 0 : _a.current)) {\n        this.videoRef.current.srcObject = evt.streams[0];\n      } else if (evt.track.kind === \"audio\" && ((_b = this.audioRef) === null || _b === void 0 ? void 0 : _b.current)) {\n        this.audioRef.current.srcObject = evt.streams[0];\n      }\n    });\n    this.pc.onicecandidate = event => {\n      var _a;\n      if (event.candidate === null) {\n        console.log(JSON.stringify((_a = this.pc) === null || _a === void 0 ? void 0 : _a.localDescription));\n      } else {\n        console.log(event.candidate);\n        this.candidateCount += 1;\n      }\n    };\n  }\n  async start() {\n    var _a, _b;\n    await this.createPeerConnection();\n    const parameters = {\n      ordered: true\n    };\n    this.dc = this.pc.createDataChannel(\"chat\", parameters);\n    this.setupDataChannelListeners();\n    (_a = this.pc) === null || _a === void 0 ? void 0 : _a.addTransceiver(\"audio\", {\n      direction: \"recvonly\"\n    });\n    (_b = this.pc) === null || _b === void 0 ? void 0 : _b.addTransceiver(\"video\", {\n      direction: \"recvonly\"\n    });\n    await this.negotiate();\n  }\n  setupDataChannelListeners() {\n    if (!this.dc) return;\n    this.dc.addEventListener(\"close\", () => {\n      console.log(\"Data channel closed\");\n      this.emit(\"disconnected\");\n      this.stopDataChannelInterval();\n    });\n    this.dc.addEventListener(\"open\", async () => {\n      console.log(\"Data channel opened\");\n      this.emit(\"connected\");\n      await this.initializeSession();\n      this.startDataChannelInterval();\n    });\n    this.dc.addEventListener(\"message\", evt => {\n      if (evt.data === \"START\") {\n        this.sessionInitialized = true;\n      }\n      console.log(\"Received message: \", evt.data);\n    });\n  }\n  startDataChannelInterval() {\n    this.stopDataChannelInterval(); // Clear any existing interval\n    this.dcInterval = setInterval(() => {\n      this.sendPingMessage();\n    }, 1000);\n  }\n  stopDataChannelInterval() {\n    if (this.dcInterval) {\n      clearInterval(this.dcInterval);\n      this.dcInterval = null;\n    }\n  }\n  sendPingMessage() {\n    var _a;\n    if (this.dc && this.dc.readyState === \"open\") {\n      const message = \"ping \" + Date.now();\n      console.log(\"Sending: \" + message);\n      try {\n        this.dc.send(message);\n      } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        this.stopDataChannelInterval();\n      }\n    } else {\n      console.warn(\"Data channel is not open. Current state:\", (_a = this.dc) === null || _a === void 0 ? void 0 : _a.readyState);\n      if (this.errorReason !== null) {\n        console.error(\"Error Reason: \", this.errorReason);\n      }\n      this.stopDataChannelInterval();\n    }\n  }\n  async initializeSession() {\n    var _a, _b;\n    const metadata = {\n      faceId: this.faceID,\n      isJPG: false,\n      apiKey: this.apiKey,\n      syncAudio: true,\n      handleSilence: this.handleSilence\n    };\n    try {\n      const response = await fetch(\"https://api.simli.ai/startAudioToVideoSession\", {\n        method: \"POST\",\n        body: JSON.stringify(metadata),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const resJSON = await response.json();\n      if (this.dc && this.dc.readyState === \"open\") {\n        this.dc.send(resJSON.session_token);\n      } else {\n        this.emit(\"failed\");\n        this.errorReason = \"Session Init failed: Simli API returned Code:\" + response.status + \"\\n\" + JSON.stringify(resJSON);\n        console.error(\"Data channel not open when trying to send session token \" + this.errorReason);\n        await ((_a = this.pc) === null || _a === void 0 ? void 0 : _a.close());\n      }\n    } catch (error) {\n      this.emit(\"failed\");\n      this.errorReason = \"Session Init failed: :\" + error;\n      console.error(\"Failed to initialize session:\", error);\n      await ((_b = this.pc) === null || _b === void 0 ? void 0 : _b.close());\n    }\n  }\n  async negotiate() {\n    var _a;\n    if (!this.pc) {\n      throw new Error(\"PeerConnection not initialized\");\n    }\n    try {\n      const offer = await this.pc.createOffer();\n      await this.pc.setLocalDescription(offer);\n      await this.waitForIceGathering();\n      const localDescription = this.pc.localDescription;\n      if (!localDescription) return;\n      const response = await fetch(\"https://api.simli.ai/StartWebRTCSession\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sdp: localDescription.sdp,\n          type: localDescription.type,\n          video_transform: \"none\"\n        })\n      });\n      if (response.status !== 200) {\n        this.emit(\"failed\");\n        const text = await response.text();\n        this.errorReason = \"Negotiation failed: Simli API returned Code:\" + response.status + \"\\n\" + text;\n        console.error(\"Failed to negotiate:\", response.status, text);\n        (_a = this.pc) === null || _a === void 0 ? void 0 : _a.close();\n        return;\n      }\n      const answer = await response.json();\n      await this.pc.setRemoteDescription(new RTCSessionDescription(answer));\n    } catch (e) {\n      console.error(\"Negotiation failed:\", e);\n      this.errorReason = \"Negotiation failed: \" + e;\n      this.emit(\"failed\");\n      this.pc.close();\n    }\n  }\n  async waitForIceGathering() {\n    if (!this.pc) return;\n    if (this.pc.iceGatheringState === \"complete\") {\n      return;\n    }\n    return new Promise(resolve => {\n      const checkIceCandidates = () => {\n        var _a, _b;\n        if (((_a = this.pc) === null || _a === void 0 ? void 0 : _a.iceGatheringState) === \"complete\" || this.candidateCount === this.prevCandidateCount) {\n          console.log((_b = this.pc) === null || _b === void 0 ? void 0 : _b.iceGatheringState, this.candidateCount);\n          resolve();\n        } else {\n          this.prevCandidateCount = this.candidateCount;\n          setTimeout(checkIceCandidates, 250);\n        }\n      };\n      checkIceCandidates();\n    });\n  }\n  listenToMediastreamTrack(stream) {\n    this.inputStreamTrack = stream;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n      sampleRate: 16000\n    });\n    this.initializeAudioWorklet(audioContext, stream);\n  }\n  initializeAudioWorklet(audioContext, stream) {\n    audioContext.audioWorklet.addModule(URL.createObjectURL(new Blob([AudioWorklet_1.AudioProcessor], {\n      type: 'application/javascript'\n    }))).then(() => {\n      this.audioWorklet = new AudioWorkletNode(audioContext, 'audio-processor');\n      this.sourceNode = audioContext.createMediaStreamSource(new MediaStream([stream]));\n      if (this.audioWorklet === null) {\n        throw new Error(\"AudioWorklet not initialized\");\n      }\n      this.sourceNode.connect(this.audioWorklet);\n      this.audioWorklet.port.onmessage = event => {\n        if (event.data.type === \"audioData\") {\n          this.sendAudioData(new Uint8Array(event.data.data.buffer));\n        }\n      };\n    });\n  }\n  sendAudioData(audioData) {\n    var _a;\n    if (this.dc && this.dc.readyState === \"open\") {\n      try {\n        if (this.sessionInitialized) {\n          this.dc.send(audioData);\n        } else {\n          console.log(\"Data channel open but session is being initialized. Ignoring audio data.\");\n        }\n      } catch (error) {\n        console.error(\"Failed to send audio data:\", error);\n      }\n    } else {\n      console.error(\"Data channel is not open. Current state:\", (_a = this.dc) === null || _a === void 0 ? void 0 : _a.readyState, \"Error Reason: \", this.errorReason);\n    }\n  }\n  close() {\n    var _a, _b, _c;\n    this.emit(\"disconnected\");\n    this.stopDataChannelInterval();\n    // close data channel\n    if (this.dc) {\n      this.dc.close();\n    }\n    // close transceivers\n    if ((_a = this.pc) === null || _a === void 0 ? void 0 : _a.getTransceivers) {\n      this.pc.getTransceivers().forEach(transceiver => {\n        if (transceiver.stop) {\n          transceiver.stop();\n        }\n      });\n    }\n    // close local audio / video\n    (_b = this.pc) === null || _b === void 0 ? void 0 : _b.getSenders().forEach(sender => {\n      var _a;\n      (_a = sender.track) === null || _a === void 0 ? void 0 : _a.stop();\n    });\n    // close peer connection\n    (_c = this.pc) === null || _c === void 0 ? void 0 : _c.close();\n    // Cleanup\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"beforeunload\", this.handleBeforeUnload);\n      window.removeEventListener(\"pagehide\", this.handlePageHide);\n    }\n  }\n}\nexports.SimliClient = SimliClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","SimliClient","events_1","require","AudioWorklet_1","EventEmitter","constructor","pc","dc","dcInterval","candidateCount","prevCandidateCount","apiKey","faceID","handleSilence","videoRef","audioRef","errorReason","sessionInitialized","inputStreamTrack","sourceNode","audioWorklet","audioBuffer","handleBeforeUnload","event","close","preventDefault","returnValue","handlePageHide","persisted","window","addEventListener","Initialize","config","console","warn","createPeerConnection","iceServers","urls","log","RTCPeerConnection","setupPeerConnectionListeners","_a","iceGatheringState","iceConnectionState","signalingState","evt","_b","track","kind","current","srcObject","streams","onicecandidate","candidate","JSON","stringify","localDescription","start","parameters","ordered","createDataChannel","setupDataChannelListeners","addTransceiver","direction","negotiate","emit","stopDataChannelInterval","initializeSession","startDataChannelInterval","data","setInterval","sendPingMessage","clearInterval","readyState","message","Date","now","send","error","metadata","faceId","isJPG","syncAudio","response","fetch","method","body","headers","resJSON","json","session_token","status","Error","offer","createOffer","setLocalDescription","waitForIceGathering","sdp","type","video_transform","text","answer","setRemoteDescription","RTCSessionDescription","e","Promise","resolve","checkIceCandidates","setTimeout","listenToMediastreamTrack","stream","audioContext","AudioContext","webkitAudioContext","sampleRate","initializeAudioWorklet","addModule","URL","createObjectURL","Blob","AudioProcessor","then","AudioWorkletNode","createMediaStreamSource","MediaStream","connect","port","onmessage","sendAudioData","Uint8Array","buffer","audioData","_c","getTransceivers","forEach","transceiver","stop","getSenders","sender","removeEventListener"],"sources":["/Users/smartleet/Desktop/Openai_RealtimeAPI_Voice_Console/node_modules/simli-client/dist/SimliClient.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimliClient = void 0;\nconst events_1 = require(\"events\");\nconst AudioWorklet_1 = require(\"./AudioWorklet\");\nclass SimliClient extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.pc = null;\n        this.dc = null;\n        this.dcInterval = null;\n        this.candidateCount = 0;\n        this.prevCandidateCount = -1;\n        this.apiKey = \"\";\n        this.faceID = \"\";\n        this.handleSilence = true;\n        this.videoRef = null;\n        this.audioRef = null;\n        this.errorReason = null;\n        this.sessionInitialized = false;\n        this.inputStreamTrack = null;\n        this.sourceNode = null;\n        this.audioWorklet = null;\n        this.audioBuffer = null;\n        this.handleBeforeUnload = (event) => {\n            this.close();\n            event.preventDefault();\n            event.returnValue = \"\";\n        };\n        this.handlePageHide = (event) => {\n            if (event.persisted) {\n                // The page is being cached for bfcache\n                this.close();\n            }\n            else {\n                // The page is being unloaded\n                this.close();\n            }\n        };\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"beforeunload\", this.handleBeforeUnload);\n            window.addEventListener(\"pagehide\", this.handlePageHide);\n        }\n    }\n    Initialize(config) {\n        this.apiKey = config.apiKey;\n        this.faceID = config.faceID;\n        this.handleSilence = config.handleSilence;\n        if (typeof window !== \"undefined\") {\n            this.videoRef = config.videoRef;\n            this.audioRef = config.audioRef;\n        }\n        else {\n            console.warn(\"Running in Node.js environment. Some features may not be available.\");\n        }\n    }\n    createPeerConnection() {\n        const config = {\n            iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }],\n        };\n        console.log(\"Server running: \", config.iceServers);\n        this.pc = new window.RTCPeerConnection(config);\n        if (this.pc) {\n            this.setupPeerConnectionListeners();\n        }\n    }\n    setupPeerConnectionListeners() {\n        if (!this.pc)\n            return;\n        this.pc.addEventListener(\"icegatheringstatechange\", () => {\n            var _a;\n            console.log(\"ICE gathering state changed: \", (_a = this.pc) === null || _a === void 0 ? void 0 : _a.iceGatheringState);\n        });\n        this.pc.addEventListener(\"iceconnectionstatechange\", () => {\n            var _a;\n            console.log(\"ICE connection state changed: \", (_a = this.pc) === null || _a === void 0 ? void 0 : _a.iceConnectionState);\n        });\n        this.pc.addEventListener(\"signalingstatechange\", () => {\n            var _a;\n            console.log(\"Signaling state changed: \", (_a = this.pc) === null || _a === void 0 ? void 0 : _a.signalingState);\n        });\n        this.pc.addEventListener(\"track\", (evt) => {\n            var _a, _b;\n            console.log(\"Track event: \", evt.track.kind);\n            if (evt.track.kind === \"video\" && ((_a = this.videoRef) === null || _a === void 0 ? void 0 : _a.current)) {\n                this.videoRef.current.srcObject = evt.streams[0];\n            }\n            else if (evt.track.kind === \"audio\" && ((_b = this.audioRef) === null || _b === void 0 ? void 0 : _b.current)) {\n                this.audioRef.current.srcObject = evt.streams[0];\n            }\n        });\n        this.pc.onicecandidate = (event) => {\n            var _a;\n            if (event.candidate === null) {\n                console.log(JSON.stringify((_a = this.pc) === null || _a === void 0 ? void 0 : _a.localDescription));\n            }\n            else {\n                console.log(event.candidate);\n                this.candidateCount += 1;\n            }\n        };\n    }\n    async start() {\n        var _a, _b;\n        await this.createPeerConnection();\n        const parameters = { ordered: true };\n        this.dc = this.pc.createDataChannel(\"chat\", parameters);\n        this.setupDataChannelListeners();\n        (_a = this.pc) === null || _a === void 0 ? void 0 : _a.addTransceiver(\"audio\", { direction: \"recvonly\" });\n        (_b = this.pc) === null || _b === void 0 ? void 0 : _b.addTransceiver(\"video\", { direction: \"recvonly\" });\n        await this.negotiate();\n    }\n    setupDataChannelListeners() {\n        if (!this.dc)\n            return;\n        this.dc.addEventListener(\"close\", () => {\n            console.log(\"Data channel closed\");\n            this.emit(\"disconnected\");\n            this.stopDataChannelInterval();\n        });\n        this.dc.addEventListener(\"open\", async () => {\n            console.log(\"Data channel opened\");\n            this.emit(\"connected\");\n            await this.initializeSession();\n            this.startDataChannelInterval();\n        });\n        this.dc.addEventListener(\"message\", (evt) => {\n            if (evt.data === \"START\") {\n                this.sessionInitialized = true;\n            }\n            console.log(\"Received message: \", evt.data);\n        });\n    }\n    startDataChannelInterval() {\n        this.stopDataChannelInterval(); // Clear any existing interval\n        this.dcInterval = setInterval(() => {\n            this.sendPingMessage();\n        }, 1000);\n    }\n    stopDataChannelInterval() {\n        if (this.dcInterval) {\n            clearInterval(this.dcInterval);\n            this.dcInterval = null;\n        }\n    }\n    sendPingMessage() {\n        var _a;\n        if (this.dc && this.dc.readyState === \"open\") {\n            const message = \"ping \" + Date.now();\n            console.log(\"Sending: \" + message);\n            try {\n                this.dc.send(message);\n            }\n            catch (error) {\n                console.error(\"Failed to send message:\", error);\n                this.stopDataChannelInterval();\n            }\n        }\n        else {\n            console.warn(\"Data channel is not open. Current state:\", (_a = this.dc) === null || _a === void 0 ? void 0 : _a.readyState);\n            if (this.errorReason !== null) {\n                console.error(\"Error Reason: \", this.errorReason);\n            }\n            this.stopDataChannelInterval();\n        }\n    }\n    async initializeSession() {\n        var _a, _b;\n        const metadata = {\n            faceId: this.faceID,\n            isJPG: false,\n            apiKey: this.apiKey,\n            syncAudio: true,\n            handleSilence: this.handleSilence,\n        };\n        try {\n            const response = await fetch(\"https://api.simli.ai/startAudioToVideoSession\", {\n                method: \"POST\",\n                body: JSON.stringify(metadata),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n            const resJSON = await response.json();\n            if (this.dc && this.dc.readyState === \"open\") {\n                this.dc.send(resJSON.session_token);\n            }\n            else {\n                this.emit(\"failed\");\n                this.errorReason = \"Session Init failed: Simli API returned Code:\" + response.status + \"\\n\" + JSON.stringify(resJSON);\n                console.error(\"Data channel not open when trying to send session token \" + this.errorReason);\n                await ((_a = this.pc) === null || _a === void 0 ? void 0 : _a.close());\n            }\n        }\n        catch (error) {\n            this.emit(\"failed\");\n            this.errorReason = \"Session Init failed: :\" + error;\n            console.error(\"Failed to initialize session:\", error);\n            await ((_b = this.pc) === null || _b === void 0 ? void 0 : _b.close());\n        }\n    }\n    async negotiate() {\n        var _a;\n        if (!this.pc) {\n            throw new Error(\"PeerConnection not initialized\");\n        }\n        try {\n            const offer = await this.pc.createOffer();\n            await this.pc.setLocalDescription(offer);\n            await this.waitForIceGathering();\n            const localDescription = this.pc.localDescription;\n            if (!localDescription)\n                return;\n            const response = await fetch(\"https://api.simli.ai/StartWebRTCSession\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    sdp: localDescription.sdp,\n                    type: localDescription.type,\n                    video_transform: \"none\",\n                }),\n            });\n            if (response.status !== 200) {\n                this.emit(\"failed\");\n                const text = await response.text();\n                this.errorReason = \"Negotiation failed: Simli API returned Code:\" + response.status + \"\\n\" + text;\n                console.error(\"Failed to negotiate:\", response.status, text);\n                (_a = this.pc) === null || _a === void 0 ? void 0 : _a.close();\n                return;\n            }\n            const answer = await response.json();\n            await this.pc.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n        catch (e) {\n            console.error(\"Negotiation failed:\", e);\n            this.errorReason = \"Negotiation failed: \" + e;\n            this.emit(\"failed\");\n            this.pc.close();\n        }\n    }\n    async waitForIceGathering() {\n        if (!this.pc)\n            return;\n        if (this.pc.iceGatheringState === \"complete\") {\n            return;\n        }\n        return new Promise((resolve) => {\n            const checkIceCandidates = () => {\n                var _a, _b;\n                if (((_a = this.pc) === null || _a === void 0 ? void 0 : _a.iceGatheringState) === \"complete\" ||\n                    this.candidateCount === this.prevCandidateCount) {\n                    console.log((_b = this.pc) === null || _b === void 0 ? void 0 : _b.iceGatheringState, this.candidateCount);\n                    resolve();\n                }\n                else {\n                    this.prevCandidateCount = this.candidateCount;\n                    setTimeout(checkIceCandidates, 250);\n                }\n            };\n            checkIceCandidates();\n        });\n    }\n    listenToMediastreamTrack(stream) {\n        this.inputStreamTrack = stream;\n        const audioContext = new (window.AudioContext ||\n            window.webkitAudioContext)({\n            sampleRate: 16000,\n        });\n        this.initializeAudioWorklet(audioContext, stream);\n    }\n    initializeAudioWorklet(audioContext, stream) {\n        audioContext.audioWorklet.addModule(URL.createObjectURL(new Blob([AudioWorklet_1.AudioProcessor], { type: 'application/javascript' }))).then(() => {\n            this.audioWorklet = new AudioWorkletNode(audioContext, 'audio-processor');\n            this.sourceNode = audioContext.createMediaStreamSource(new MediaStream([stream]));\n            if (this.audioWorklet === null) {\n                throw new Error(\"AudioWorklet not initialized\");\n            }\n            this.sourceNode.connect(this.audioWorklet);\n            this.audioWorklet.port.onmessage = (event) => {\n                if (event.data.type === \"audioData\") {\n                    this.sendAudioData(new Uint8Array(event.data.data.buffer));\n                }\n            };\n        });\n    }\n    sendAudioData(audioData) {\n        var _a;\n        if (this.dc && this.dc.readyState === \"open\") {\n            try {\n                if (this.sessionInitialized) {\n                    this.dc.send(audioData);\n                }\n                else {\n                    console.log(\"Data channel open but session is being initialized. Ignoring audio data.\");\n                }\n            }\n            catch (error) {\n                console.error(\"Failed to send audio data:\", error);\n            }\n        }\n        else {\n            console.error(\"Data channel is not open. Current state:\", (_a = this.dc) === null || _a === void 0 ? void 0 : _a.readyState, \"Error Reason: \", this.errorReason);\n        }\n    }\n    close() {\n        var _a, _b, _c;\n        this.emit(\"disconnected\");\n        this.stopDataChannelInterval();\n        // close data channel\n        if (this.dc) {\n            this.dc.close();\n        }\n        // close transceivers\n        if ((_a = this.pc) === null || _a === void 0 ? void 0 : _a.getTransceivers) {\n            this.pc.getTransceivers().forEach((transceiver) => {\n                if (transceiver.stop) {\n                    transceiver.stop();\n                }\n            });\n        }\n        // close local audio / video\n        (_b = this.pc) === null || _b === void 0 ? void 0 : _b.getSenders().forEach((sender) => {\n            var _a;\n            (_a = sender.track) === null || _a === void 0 ? void 0 : _a.stop();\n        });\n        // close peer connection\n        (_c = this.pc) === null || _c === void 0 ? void 0 : _c.close();\n        // Cleanup\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"beforeunload\", this.handleBeforeUnload);\n            window.removeEventListener(\"pagehide\", this.handlePageHide);\n        }\n    }\n}\nexports.SimliClient = SimliClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}