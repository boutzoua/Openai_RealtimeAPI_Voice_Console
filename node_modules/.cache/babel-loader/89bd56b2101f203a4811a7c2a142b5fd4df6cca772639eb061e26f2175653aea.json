{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AudioProcessor = void 0;\nexports.AudioProcessor = `\n        class AudioProcessor extends AudioWorkletProcessor {\n          constructor() {\n            super();\n            this.buffer = new Int16Array(${3000});\n            this.bufferIndex = 0;\n        }\n\n          process(inputs, outputs, parameters) {\n            const input = inputs[0];\n            const inputChannel = input[0];\n            if (inputChannel) {\n              for (let i = 0; i < inputChannel.length; i++) {\n                this.buffer[this.bufferIndex] = Math.max(-32768, Math.min(32767, Math.round(inputChannel[i] * 32767)));\n                this.bufferIndex++;\n                \n                if (this.bufferIndex === this.buffer.length){\n                  this.port.postMessage({type: 'audioData', data: this.buffer.slice(0, this.bufferIndex)});\n                  this.bufferIndex = 0;\n                }\n              }\n            }\n            return true;\n          }\n        }\n\n        registerProcessor('audio-processor', AudioProcessor);\n      `;","map":{"version":3,"names":["Object","defineProperty","exports","value","AudioProcessor"],"sources":["/Users/smartleet/Desktop/Openai_RealtimeAPI_Voice_Console/node_modules/simli-client/dist/AudioWorklet.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioProcessor = void 0;\nexports.AudioProcessor = `\n        class AudioProcessor extends AudioWorkletProcessor {\n          constructor() {\n            super();\n            this.buffer = new Int16Array(${3000});\n            this.bufferIndex = 0;\n        }\n\n          process(inputs, outputs, parameters) {\n            const input = inputs[0];\n            const inputChannel = input[0];\n            if (inputChannel) {\n              for (let i = 0; i < inputChannel.length; i++) {\n                this.buffer[this.bufferIndex] = Math.max(-32768, Math.min(32767, Math.round(inputChannel[i] * 32767)));\n                this.bufferIndex++;\n                \n                if (this.bufferIndex === this.buffer.length){\n                  this.port.postMessage({type: 'audioData', data: this.buffer.slice(0, this.bufferIndex)});\n                  this.bufferIndex = 0;\n                }\n              }\n            }\n            return true;\n          }\n        }\n\n        registerProcessor('audio-processor', AudioProcessor);\n      `;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/BF,OAAO,CAACE,cAAc,GAAG;AACzB;AACA;AACA;AACA,2CAA2C,IAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}