import { EventEmitter } from "events";
export interface SimliClientConfig {
    apiKey: string;
    faceID: string;
    handleSilence: boolean;
    videoRef: React.RefObject<HTMLVideoElement>;
    audioRef: React.RefObject<HTMLAudioElement>;
}
export declare class SimliClient extends EventEmitter {
    private pc;
    private dc;
    private dcInterval;
    private candidateCount;
    private prevCandidateCount;
    private apiKey;
    private faceID;
    private handleSilence;
    private videoRef;
    private audioRef;
    private errorReason;
    private sessionInitialized;
    private inputStreamTrack;
    private sourceNode;
    private audioWorklet;
    private audioBuffer;
    constructor();
    Initialize(config: SimliClientConfig): void;
    private createPeerConnection;
    private setupPeerConnectionListeners;
    start(): Promise<void>;
    private setupDataChannelListeners;
    private startDataChannelInterval;
    private stopDataChannelInterval;
    private sendPingMessage;
    private initializeSession;
    private negotiate;
    private waitForIceGathering;
    listenToMediastreamTrack(stream: MediaStreamTrack): void;
    private initializeAudioWorklet;
    sendAudioData(audioData: Uint8Array): void;
    close(): void;
    private handleBeforeUnload;
    private handlePageHide;
}
